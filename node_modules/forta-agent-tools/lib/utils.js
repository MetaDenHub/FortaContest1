"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeEventSignature = exports.encodeFunctionCall = exports.encodeFunctionSignature = exports.decodeFunctionCallParameters = exports.stripFunctionSelector = exports.decodeParameters = exports.decodeParameter = exports.encodeParameters = exports.encodeParameter = void 0;
var web3_1 = __importDefault(require("web3"));
var web3_utils_1 = require("web3-utils");
var web3 = new web3_1.default();
var encodeParameter = function (type, value) { return web3.eth.abi.encodeParameter(type, value); };
exports.encodeParameter = encodeParameter;
var encodeParameters = function (types, values) { return web3.eth.abi.encodeParameters(types, values); };
exports.encodeParameters = encodeParameters;
var decodeParameter = function (type, value) { return web3.eth.abi.decodeParameter(type, value); };
exports.decodeParameter = decodeParameter;
var decodeParameters = function (types, value) { return web3.eth.abi.decodeParameters(types, value); };
exports.decodeParameters = decodeParameters;
var stripFunctionSelector = function (txData) { return (0, web3_utils_1.stripHexPrefix)(txData).slice(8); };
exports.stripFunctionSelector = stripFunctionSelector;
var decodeFunctionCallParameters = function (types, txData) {
    var encodedParameters = (0, exports.stripFunctionSelector)(txData);
    return (0, exports.decodeParameters)(types, encodedParameters);
};
exports.decodeFunctionCallParameters = decodeFunctionCallParameters;
var encodeFunctionSignature = function (functionsSignature) { return web3.eth.abi.encodeFunctionSignature(functionsSignature); };
exports.encodeFunctionSignature = encodeFunctionSignature;
var encodeFunctionCall = function (functionAbi, values) { return web3.eth.abi.encodeFunctionCall(functionAbi, values); };
exports.encodeFunctionCall = encodeFunctionCall;
var encodeEventSignature = function (functionAbi) { return web3.eth.abi.encodeEventSignature(functionAbi); };
exports.encodeEventSignature = encodeEventSignature;
